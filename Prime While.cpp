#include <iostream>

int main() { 
    int num; // ประกาศตัวแปรชนิด integer (จำนวนเต็ม) ชื่อ num เพื่อใช้เก็บค่าตัวเลขที่ผู้ใช้จะป้อนเข้ามา
    
    std::cout << "Enter number : "; 
    
    std::cin >> num; 

    std::cout << "Output:" << std::endl; 
    
    int i = num; // กำหนดให้ตัวแปร i มีค่าเริ่มต้นเท่ากับ num
    
    // ลูปนี้จะทำงานเท่าที่เงื่อนไข i >= 2 เป็นจริง
    // เป็นการวนลูปจากตัวเลขที่ผู้ใช้ป้อนลงไปเรื่อยๆ จนถึง 2
    while (i >= 2) { 
        
        // สร้างตัวแปร boolean (ตรรกะ) ชื่อ isPrime และกำหนดค่าเริ่มต้นเป็น true (จริง)
        // เราจะสมมติไว้ก่อนว่าตัวเลข i เป็นจำนวนเฉพาะ จนกว่าจะพิสูจน์ได้ว่าไม่ใช่
        bool isPrime = true; 

        // นี่คือการเริ่มต้น **Inner while loop**
        // กำหนดให้ตัวแปร j มีค่าเริ่มต้นเท่ากับ 2
        int j = 2; 
        
        // ลูปนี้จะทำงานเพื่อตรวจสอบว่าตัวเลข i มีตัวหารอื่นหรือไม่
        // โดยจะวนไปเรื่อยๆ ตราบเท่าที่เงื่อนไข j < i เป็นจริง
        while (j < i) { 
            
            // ตรวจสอบว่า i หารด้วย j ลงตัวหรือไม่
            // % (modulo) คือ operator ที่หาเศษจากการหาร
            // ถ้า i % j เท่ากับ 0 แสดงว่าหารลงตัว
            if (i % j == 0) { 
                
                // ถ้าหารลงตัว แสดงว่า i **ไม่** ใช่จำนวนเฉพาะ
                // ตั้งค่าตัวแปร isPrime เป็น false (เท็จ)
                isPrime = false; 
                
                // ใช้คำสั่ง break เพื่อออกจากลูป while รอบในทันที
                // เพราะเมื่อเจอตัวหารแล้ว ก็ไม่จำเป็นต้องตรวจสอบตัวเลขอื่นๆ อีก
                break; 
            }
            // เพิ่มค่า j ขึ้นทีละ 1 เพื่อตรวจสอบตัวหารถัดไป
            j++; 
        }

        // เมื่อออกจากลูป while รอบในแล้ว จะมาตรวจสอบเงื่อนไขนี้
        // ถ้า isPrime ยังคงเป็น true แสดงว่าไม่พบตัวหารเลย
        if (isPrime) { 
            
            // แสดงค่าของ i (ซึ่งเป็นจำนวนเฉพาะ) ตามด้วยช่องว่างหนึ่งช่อง
            std::cout << i << " "; 
        }

        // ลดค่า i ลงทีละ 1 เพื่อให้ลูปนอกวนไปตรวจสอบตัวเลขถัดไป
        i--; 
    }

    // เมื่อลูป while รอบนอกทำงานเสร็จสิ้นทั้งหมดแล้ว ให้ขึ้นบรรทัดใหม่
    std::cout << std::endl; 
    
    // คืนค่า 0 เพื่อบอกระบบปฏิบัติการว่าโปรแกรมทำงานเสร็จสิ้นโดยไม่มีข้อผิดพลาด
    return 0; 
}